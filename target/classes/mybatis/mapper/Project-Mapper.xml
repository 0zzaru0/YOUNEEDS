<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="projectSQL">
 
 
 	
 	<resultMap type="creatorDto" id="creatorMap">
 		<result property="m_uid" column="M_UID"/>
 		<result property="create_name" column="CREATE_NAME"/>
 		<result property="create_intro" column="CREATE_INTRO"/>
 	</resultMap>
 	
 	<resultMap type="projectTitleImgDto" id="projectTitleImgMap">
 		<result property="p_id" column="P_ID"/>
 		<result property="title_origin_name" column="TITLE_ORIGIN_NAME"/>
 		<result property="title_stored_name" column="TITLE_STORED_NAME"/>
 		<result property="title_stored_path" column="TITLE_STORED_PATH"/>
 		<result property="title_file_size" column="TITLE_FILE_SIZE"/>
 	</resultMap>
 	
 	<resultMap type="projectFundGuideDto" id="projectFundGuideMap">
 		<result property="p_id" column="P_ID"/>
 		<result property="fund_guide_content" column="FUND_GUIDE_CONTENT"/>
 	</resultMap>
 	
 	<resultMap type="projectIntroDto" id="projectIntroMap">
 		<result property="p_id" column="P_ID"/>
 		<result property="p_intro" column="P_INTRO"/>
 	</resultMap>

 	<resultMap type="projectDto" id="projectDtoJoin">
 		<result property="p_id" column="P_ID"/>
 		<result property="p_title" column="P_TITLE"/>
 		<result property="p_category" column="P_CATEGORY"/>
 		<result property="target_amount" column="TARGET_AMOUNT"/>
 		<result property="p_regdate" column="P_REGDATE"/>
 		<result property="start_date" column="START_DATE"/>
 		<result property="end_date" column="END_DATE"/>
 		<result property="creator_uid" column="CREATOR_UID"/>
 		<collection property="creatorDto" resultMap="creatorMap"/>
 	</resultMap>
 		
 	
 	<resultMap type="projectDto" id="projectJoinDetail">
 		<result property="p_id" column="P_ID"/>
 		<result property="p_title" column="P_TITLE"/>
 		<result property="p_category" column="P_CATEGORY"/>
 		<result property="target_amount" column="TARGET_AMOUNT"/>
 		<result property="p_regdate" column="P_REGDATE"/>
 		<result property="start_date" column="START_DATE"/>
 		<result property="end_date" column="END_DATE"/>
 		<result property="creator_uid" column="CREATOR_UID"/>
 		<collection property="creatorDto" resultMap="creatorMap"/>
 		<collection property="projectTilteImgDto" resultMap="projectTitleImgMap"/>
 		<collection property="projectIntroDto" resultMap="projectIntroMap"/>
 		<collection property="projectFundGuideDto" resultMap="projectFundGuideMap"/>
 	</resultMap>	
 
 	<!-- 프로젝트 조회 -->
 	<select id="searchProjectList" parameterType="java.util.HashMap" 
 	 			resultMap="projectJoinDetail">
		SELECT  P.P_ID, P.P_TITLE, P.P_CATEGORY, P.TARGET_AMOUNT, P.P_REGDATE, P.START_DATE, P.END_DATE, IMG.TITLE_STORED_NAME
		FROM (
		SELECT ROW_NUMBER() OVER(ORDER BY P_ID DESC) AS NUM, P_ID, P_TITLE, P_CATEGORY, TARGET_AMOUNT, P_REGDATE, START_DATE, END_DATE
		FROM PROJECT
		<if test="p_category != null and !''.equals(p_category)">
		 	WHERE P_CATEGORY = #{p_category}
		</if>
		) P
		LEFT JOIN PROJECT_TITLE_IMG IMG ON (P.P_ID = IMG.P_ID)
		WHERE P.NUM <![CDATA[<=]]> #{p}*9 AND P.NUM <![CDATA[>=]]> #{p}*9-8
 	 </select> 
 	
 	<!-- 프로젝트 등록 -->
 	<insert id="insertProject" parameterType="projectDto">
 		<selectKey keyProperty="p_id" resultType="int" order="BEFORE">
 		 	SELECT PROJECT_SEQ.NEXTVAL FROM dual
 		 </selectKey>
 		INSERT 
 		INTO Project
 		VALUES(#{p_id}, #{p_title}, #{p_category}, #{target_amount}, SYSDATE,
 		 	TO_DATE(#{start_date}, 'YYYY-MM-DD HH24:MI'),
 		 	TO_DATE(#{end_date}, 'YYYY-MM-DD HH24:MI'),
 		 	#{creator_uid} )
 	</insert>
 		
 	<insert id="insertGuide" parameterType="projectFundGuideDto">
 		INSERT INTO Project_Fund_Guide
 		VALUES(#{p_id}, #{fund_guide_content})
 	</insert>
 	
 	<insert id="insertIntro" parameterType="projectIntroDto">
 		INSERT INTO PROJECT_INTRO
 		VALUES(#{p_id},#{p_intro})
 	</insert>
 	
 	<insert id="insertImgData" parameterType="projectTitleImgDto">
 		INSERT INTO Project_title_img
 		VALUES(#{p_id}, #{title_origin_name}, #{title_stored_name}, #{title_stored_path}, #{title_file_size})
 	</insert>
 		
 	<!-- 프로젝트 Intro 상세 조회 -->
 	<select id="projectDetailIntro" parameterType="int" resultMap="projectJoinDetail">
 		SELECT 
		P.P_ID, P.P_TITLE, P.P_CATEGORY, P.TARGET_AMOUNT, P.P_REGDATE, P.START_DATE, P.END_DATE, P.CREATOR_UID,
		IMG.TITLE_STORED_NAME,
		IT.P_INTRO,
		C.M_UID, C.CREATE_NAME, C.CREATE_INTRO
		FROM PROJECT P
		LEFT JOIN PROJECT_TITLE_IMG IMG ON (P.P_ID = IMG.P_ID)
		LEFT JOIN PROJECT_INTRO IT ON (P.P_ID = IT.P_ID)
		LEFT JOIN CREATOR C ON (P.CREATOR_UID = C.M_UID)
		WHERE P_ID = #{p_id}
 	</select>
 	
 	<select id="orderSum" parameterType="int" resultType="int">
 		SELECT  SUM(ORDER_PAY) FROM ORDERPAY WHERE P_ID=#{p_id}
 	</select>
 	
 	<select id="orderCount" parameterType="int" resultType="int">
 		SELECT  COUNT(ORDER_ID) FROM ORDERPAY WHERE P_ID=#{p_id}
 	</select>
 	
 	
 	<select id="selectProjectInform" parameterType="int" resultMap="projectJoinDetail">
 		SELECT 
		P.P_ID, P.P_TITLE, P.P_CATEGORY, P.TARGET_AMOUNT, P.P_REGDATE, P.START_DATE, P.END_DATE, P.CREATOR_UID,
		IMG.TITLE_STORED_NAME,
		C.M_UID, C.CREATE_NAME, C.CREATE_INTRO
		FROM PROJECT P
		LEFT JOIN PROJECT_TITLE_IMG IMG ON (P.P_ID = IMG.P_ID)
		LEFT JOIN CREATOR C ON (P.CREATOR_UID = C.M_UID)
		WHERE P.P_ID = #{p_id}
 	</select>
 	
 	<select id="selectProjectJoinGuide" parameterType="int" resultMap="projectJoinDetail">
		SELECT
		P.P_ID, P.P_TITLE, P.P_CATEGORY, P.TARGET_AMOUNT, P.P_REGDATE, P.START_DATE, P.END_DATE, P.CREATOR_UID,
		IMG.TITLE_STORED_NAME,
		C.M_UID, C.CREATE_NAME, C.CREATE_INTRO,
        G.FUND_GUIDE_CONTENT
		FROM PROJECT P
		LEFT JOIN PROJECT_TITLE_IMG IMG ON (P.P_ID = IMG.P_ID)
		LEFT JOIN CREATOR C ON (P.CREATOR_UID = C.M_UID)
        LEFT JOIN Project_Fund_Guide G ON(P.P_ID = G.P_ID)
		WHERE P.P_ID = #{p_id}
 	</select>
 	
 	
 	
 	<select id="creatorMyPageInfo" parameterType="java.util.HashMap" resultMap="projectJoinDetail">
        SELECT P.P_ID, P.P_TITLE, P.P_CATEGORY, P.TARGET_AMOUNT, P.P_REGDATE, P.START_DATE, P.END_DATE ,  IMG.TITLE_STORED_NAME
	    FROM ( SELECT ROW_NUMBER() OVER(ORDER BY P_ID ASC ) AS NUM, P_ID, P_TITLE, P_CATEGORY, TARGET_AMOUNT, P_REGDATE, START_DATE, END_DATE, CREATOR_UID FROM PROJECT  WHERE CREATOR_UID = #{m_uid}) P
	    LEFT JOIN PROJECT_TITLE_IMG IMG ON (P.P_ID=IMG.P_ID)
	    WHERE P.NUM <![CDATA[<=]]> #{page_val}*3 AND P.NUM <![CDATA[>=]]> #{page_val}*3-2
	</select>
	
	<select id="selectRecentList" resultMap="projectJoinDetail">
		SELECT P.P_ID, P.P_TITLE, P.P_CATEGORY, P.TARGET_AMOUNT, IMG.TITLE_STORED_NAME
		FROM (
		    SELECT 
		    ROW_NUMBER() OVER(ORDER BY P.P_ID DESC) AS CNT , P.P_ID, P.P_TITLE, P.P_CATEGORY, P.TARGET_AMOUNT
		    FROM PROJECT P
		) P
		LEFT JOIN PROJECT_TITLE_IMG  IMG ON (P.P_ID = IMG.P_ID)
		WHERE CNT <![CDATA[<]]> 4
	</select>
	
	<select id="selectProjectMax" parameterType="String" resultType="int">
		SELECT NVL(MAX(ROWNUM),0) FROM PROJECT
		<if test="p_category != null and !''.equals(p_category)">
		 	WHERE P_CATEGORY = #{p_category}
		</if>
	</select>

	<select id="selectListMaxLength" resultType="int">
	SELECT MAX(ROWNUM) FROM PROJECT WHERE CREATOR_UID=#{m_uid} ORDER BY P_ID DESC
	</select>
	
	<select id="selectWriter" parameterType="int" resultType="int">
		SELECT NVL(CREATOR_UID,0) FROM PROJECT WHERE P_ID = #{p_id}
	</select>
	
	
 </mapper>