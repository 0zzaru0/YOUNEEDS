<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="member">
 	
 	<resultMap type="creatorDto" id="creatorMap">
 		<result property="m_uid" column="m_uid"/>
 		<result property="create_name" column="create_name"/>
 		<result property="create_intro" column="create_intro"/>
 	</resultMap>
 
 	<resultMap type="memberDto" id="memberMap">
		<result property="m_uid" column="m_uid"/>
		<result property="m_email" column="m_email"/>
		<result property="m_pw" column="m_pw"/>
		<result property="m_nickname" column="m_nickname"/>
		<result property="m_addr" column="m_addr"/>
		<result property="m_addr_detail" column="m_addr_detail"/>
		<result property="m_type" column="m_type"/>
		<result property="m_regdate" column="m_regdate"/>
		<result property="m_enabled" column="m_enabled"/>
		<result property="m_deldate" column="m_deldate"/>
		<collection property="creatorDto" resultMap="creatorMap"></collection>
	</resultMap>
	
	
	
	<!-- 일반 회원가입 -->
 	<insert id="insert" parameterType="memberDto">
 		insert into Member
 		values(member_seq.nextval, #{m_email}, #{m_pw}, #{m_nickname}, #{m_addr}, #{m_addr_detail}, #{m_type}, sysdate, 'Y', null)
 	</insert>
 	
 	<!-- 창작 회원가입 -->
 	<insert id="c_insert" parameterType="memberDto">
 		<selectKey keyProperty="m_uid" resultType="int" order="BEFORE">
 			SELECT MEMBER_SEQ.NEXTVAL FROM DUAL
 		</selectKey>
 		insert all
 		into Member
 		values(#{m_uid}, #{memberDto.m_email}, #{memberDto.m_pw}, #{memberDto.m_nickname}, #{memberDto.m_addr}, #{memberDto.m_addr_detail}, #{memberDto.m_type}, sysdate, 'Y', null)
 		into Creator
 		values (#{m_uid}, #{create_name}, #{create_intro})
 		select * from dual
 	</insert>
 	
 	<!-- 닉네임중복 -->
 	<select id="nicknameChk" resultType="int">
 		select count(*)
 		from Member
 		where m_nickname=#{m_nickname}
 	</select>
 	
 	<!-- 로그인 -->
 	<select id="login" parameterType="memberDto" resultMap="memberMap">
 		select m.m_uid, m.m_email, m.m_pw, m.m_nickname, m.m_addr, m.m_addr_detail, m.m_type, m.m_regdate, m.m_enabled, m.m_deldate, c.create_name, c.create_intro
 		from Member m
        left join creator c on (m.m_uid = c.m_uid)
 		where m_email = #{m_email, jdbcType=VARCHAR} and m_pw = #{m_pw, jdbcType=VARCHAR} and m_enabled='Y'
 	</select>


	<!-- 비번찾기 -->
	<select id="findPwd" parameterType="memberDto" resultType="memberDto">
		select m_email, m_pw
		from Member
		where m_email = #{m_email}
	</select>
	
	<!-- 일반회원 수정 -->
	<update id="update" parameterType="memberDto">
		update Member
		set m_pw= #{m_pw}, m_nickname = #{m_nickname}, m_addr=#{m_addr}, m_addr_detail=#{m_addr_detail}
		where m_uid=#{m_uid}
	</update>
	
	<!-- 창작회원 수정 -->
	<update id="c_update" parameterType="memberDto">
		update Member
		set m_pw= #{m_pw}, m_nickname = #{m_nickname}, m_addr=#{m_addr}, m_addr_detail=#{m_addr_detail}
		where m_uid=#{m_uid}
	</update>
	
	<update id="create_update" parameterType="creatorDto">
		update Creator
		set create_name=#{create_name}, create_intro=#{create_intro} 
		where m_uid=#{m_uid}
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="withdrawal" parameterType="memberDto">
		update Member
		set m_enabled='N', m_deldate=sysdate
		where m_uid=#{m_uid}
	</update>
	
	
	<select id="selectOne" parameterType="int" resultType="memberDto">
		select m_uid, m_email, m_pw, m_nickname, m_addr, m_addr_detail, m_type
		from Member
		where m_uid=#{m_uid}
	</select>
 </mapper>